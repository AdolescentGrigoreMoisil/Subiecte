/**
 * Code by George Chichirim
 * "Mircea cel Batran" National College of Constanta
 *
 *  Expected score : 100 points
 **/
 
#include <cstdio>
#include <algorithm>
#include <cstring>
 
using namespace std;
 
const int inf=0x3f3f3f3f;
int d[3][35][35][35][35],cost[2][35][35];
char v[35];
 
void update(int &a,int b)
{
    a=min(a,b);
}
 
int main()
{
    freopen("palsubsecv.in", "r", stdin);
    freopen("palsubsecv.out", "w", stdout);
    int t;
    for(scanf("%d",&t);t;t--)
    {
        memset(cost,0,sizeof(cost));
        memset(d,inf,sizeof(d));
        int n,m,s,a,b,c;
        scanf("%d%d%d\n%s",&n,&m,&s,v+1);
        for(int i=1;i<=m;i++)
        {
            scanf("%d%d%d",&a,&b,&c);
            for(int j=b;j<=n;j++) cost[0][a][j]+=c;
            for(int j=a;j;j--) cost[1][b][j]+=c;
        }
        for(int i=1;i<=n;i++) d[1][i][0][0][0]=0;
        for(int i=1;i<n;i++) if(v[i]==v[i+1]) update(d[2][i][2][2][2],cost[0][i][i+1]+cost[1][i+1][i+1]);
        for(int l=1;l<=n;l++)
        {
            int ind1=l%3,ind2=(l+1)%3,ind3=(l+2)%3,lim=n-l+1;
            memset(d[(l-1)%3],inf,sizeof(d[(l-1)%3]));
            for(int i=1;i<=lim;i++)
            {
                for(int left=0;left<=l;left++)
                    for(int right=0;right+left<l;right++)
                        for(int nr=0;nr<=l;nr++)
                        {
                            update(d[ind2][i-1][0][right][nr],d[ind1][i][left][right][nr]);
                            update(d[ind2][i][left][0][nr],d[ind1][i][left][right][nr]);
                            if(v[i-1]==v[i+l]) update(d[ind3][i-1][left+1][right+1][nr+2],d[ind1][i][left][right][nr]+cost[0][i-1][i+left-1]+cost[1][i+l][i+l-right]);
                        }
                update(d[ind2][i-1][0][l][l],d[ind1][i][l][l][l]);
                update(d[ind2][i][l][0][l],d[ind1][i][l][l][l]);
                if(v[i-1]==v[i+l]) update(d[ind3][i-1][l+2][l+2][l+2],d[ind1][i][l][l][l]+cost[0][i-1][i+l]+cost[1][i+l][i]);
            }
        }
        int ind=n%3,sol=0;
        for(int left=0;left<=n;left++)
            for(int right=0;right+left<n;right++)
                for(int nr=0;nr<=n;nr++) if(d[ind][1][left][right][nr]<=s) sol=max(sol,nr);
        if(d[ind][1][n][n][n]<=s) sol=max(sol,n);
        printf("%d\n",sol);
    }
    return 0;
}
