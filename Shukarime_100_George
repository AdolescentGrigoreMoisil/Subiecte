#include <cstdio>
#include <map>
#include <cassert>
 
using namespace std;
 
const int lim=1000000,prim=1000003;
const long long mod=73542423423423;
map<long long,int> h;
int v[100010],vaz[lim+10];
long long put[lim+10];
 
int main()
{
    freopen("shukarime.in", "r", stdin);
    freopen("shukarime.out", "w", stdout);
    int nr=0,t;
    for(int i=2;i<=1000;i++)
        if(!vaz[i])
        {
            v[++nr]=i;
            for(int j=i*i;j<=1000;j+=i) vaz[j]=1;
        }
    put[0]=1;
    for(int i=1;i<=lim;i++) put[i]=(1LL*put[i-1]*prim)%mod;
    scanf("%d",&t);
    assert(1<=t && t<=5);
    for(;t;t--)
    {
        int n,p,x;
        long long sol=0,hash=0;
        scanf("%d%d",&n,&p);
        assert(1<=n && n<=100000);
        assert(1<=p && p<=n);
        for(int i=1;i<=lim;i++) vaz[i]=0;
        h[0]=1;
        for(int i=1;i<=n;i++)
        {
            scanf("%d",&x);
            assert(1<=x && x<=1000000);
            for(int j=1;j<=nr && v[j]*v[j]<=x;j++)
                if(x%v[j]==0)
                {
                    int cnt=0;
                    for(;x%v[j]==0;x/=v[j]) cnt++;
                    hash=((hash+((vaz[v[j]]+cnt)%p-vaz[v[j]])*put[v[j]])%mod+mod)%mod;
                    vaz[v[j]]=(vaz[v[j]]+cnt)%p;
                }
            if(x>1)
            {
                hash=((hash+((vaz[x]+1)%p-vaz[x])*put[x])%mod+mod)%mod;
                vaz[x]=(vaz[x]+1)%p;
            }
            sol+=h[hash];
            h[hash]++;
        }
        printf("%lld\n",sol);
        h.clear();
    }
    return 0;
}
