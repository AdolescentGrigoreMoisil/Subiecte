/*
 * Teodor Ionescu
 * Problem: Valea Regilor
 */
#include <fstream>
#include <vector>
#include <cassert>
using namespace std;
  
ifstream cin("valearegilor.in");
ofstream cout("valearegilor.out");
  
int rmq[20][100001];
int lg[100001];
  
void prmq(vector<int> &p, int n) {
    for(int j=1; j<=n; j++) rmq[0][j] = j;
    for(int i=1; i<=lg[n]; i++){
        for(int j=1; j<= n-(1<<i)+1; j++){
            int a1 = rmq[i-1][j], a2 = rmq[i-1][j+(1<<(i-1))];
            rmq[i][j] = p[a1-1] < p[a2-1] ? a1 : a2;
        }
    }
}
  
int qrmq(vector<int> &p, int a, int b){
    int l = lg[b-a+1], plen = b-a+1-(1<<l);
    int a1 = rmq[l][a], a2 = rmq[l][a + plen];
    return p[a1-1] < p[a2-1] ? a1 : a2;
}
  
int main() {
    int n, q;
    cin >> n >> q;
    for(int i=2; i<=n; i++) lg[i] = lg[i/2] + 1;
  
    vector<vector<int>> L(n), R(n);
    vector<pair<int, int>> r(q), ans(q);
    vector<int> mn(q), p(n), poz(n), st(n);
  
    for(int i=0; i<n; i++) cin >> p[i];
    prmq(p, n);
  
    for(int i=0; i<q; i++) {
        cin >> r[i].first >> r[i].second;
        r[i].first --, r[i].second --;
 
        if(r[i].second - r[i].first == 0) {
            ans[i].first = 1;
            ans[i].second = 0;
            continue;
        }
         
        if(r[i].second - r[i].first == 1) {
            ans[i].first = ans[i].second = 1;
            continue;
        }
  
        mn[i] = qrmq(p, r[i].first+1+1, r[i].second) - 1;
  
        if(p[mn[i]] > max(p[r[i].first], p[r[i].second])) {
            ans[i].first = ans[i].second = 1;
            continue;
        }
  
        if(p[mn[i]] > min(p[r[i].first], p[r[i].second])) {
            mn[i] = p[r[i].first] < p[r[i].second] ? r[i].first : r[i].second;
        }
  
        L[r[i].first].push_back(i);
        R[r[i].second].push_back(i);
    }
  
    int size = 0;
  
    for(int i=0; i<n; i++) {
        while(size && p[st[size-1]] > p[i]) size--;
        st[poz[i] = size++] = i;
        for(auto qi : R[i]) {
            ans[qi].first = size-poz[mn[qi]];
        }
    }
  
    size = 0;
  
    for(int i=n-1; i>=0; i--) {
        while(size && p[st[size-1]] > p[i]) size--;
        st[poz[i] = size++] = i;
        for(auto qi : L[i]) {
            ans[qi].second = size-poz[mn[qi]]-1;
        }
    }
  
    for(int i=0; i<q; i++) {
        cout << ans[i].first + ans[i].second << '\n';
    }
  
    return 0;
}
