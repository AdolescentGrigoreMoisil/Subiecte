/**
  * George Chichirim
  * University of Oxford
  * Expected: Accepted
*/
#include <bits/stdc++.h>
 
using namespace std;
 
const int MaxN=200010,inf=1e9;
int v[MaxN];
long long din[MaxN];
char car[MaxN];
int n,d;
 
void solve(int st,int dr,int &x,long long &sol)
{
    if(v[dr]-v[st]<=d)
    {
        sol+=d;
        x=max(x+d,v[dr]);
    }
    else
    {
        int poz=st;
        long long minn=1LL*inf*inf;
        din[st-1]=0;
        for(int i=st;i<=dr;i++)
        {
            for(;v[poz]+d<v[i];poz++)
                minn=min(minn,din[poz-1]-v[poz]);
            din[i]=din[poz-1]+d;
            din[i]=min(din[i],minn+v[i]);
        }
        sol+=din[dr];
        x=v[dr];
    }
}
 
long long solve_test()
{
    int x=-inf;
    long long sol=0;
    for(int i=1;i<=n;i++)
    {
        if(x>v[i]) return -1;
        int j=i;
        for(;j<=n && car[j]==car[i];j++);
        solve(i,j-1,x,sol);
        i=j-1;
    }
    return sol;
}
 
int main()
{
    freopen("fnaf.in", "r", stdin);
    freopen("fnaf.out", "w", stdout);
    int t;
    for(scanf("%d",&t);t;t--)
    {
        scanf("%d%d",&n,&d);
        for(int i=1;i<=n;i++) scanf("%d %c",&v[i],&car[i]);
        printf("%lld\n",solve_test());
    }
    return 0;
}
